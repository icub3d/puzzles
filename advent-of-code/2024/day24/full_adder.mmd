graph TD;
classDef AND fill:#f38ba8,stroke:#11111b,stroke-width:2px;
classDef OR fill:#a6e3a1,stroke:#11111b,stroke-width:2px;
classDef XOR fill:#b4befe,stroke:#11111b,stroke-width:2px;
classDef INPUT fill:#f9e2af,stroke:#11111b,stroke-width:2px;
classDef Z fill:#f2cdcd,stroke:#11111b,stroke-width:2px;
classDef VARIABLE fill:#74c7ec,stroke:#11111b,stroke-width:2px;
x00y00v1[XOR];
class x00y00v1 XOR;
x00:::INPUT;
y00:::INPUT;
v1:::VARIABLE;
x00 --> x00y00v1;
y00 --> x00y00v1;
x00y00v1 --> v1;
x00y00v2[AND];
class x00y00v2 AND;
x00:::INPUT;
y00:::INPUT;
v2:::VARIABLE;
x00 --> x00y00v2;
y00 --> x00y00v2;
x00y00v2 --> v2;
c00v1z00[XOR];
class c00v1z00 XOR;
c00:::VARIABLE;
v1:::VARIABLE;
z00:::Z;
c00 --> c00v1z00;
v1 --> c00v1z00;
c00v1z00 --> z00;
c00v1v3[AND];
class c00v1v3 AND;
c00:::VARIABLE;
v1:::VARIABLE;
v3:::VARIABLE;
c00 --> c00v1v3;
v1 --> c00v1v3;
c00v1v3 --> v3;
v2v3c001[OR];
class v2v3c001 OR;
v2:::VARIABLE;
v3:::VARIABLE;
c001:::VARIABLE;
v2 --> v2v3c001;
v3 --> v2v3c001;
v2v3c001 --> c001;
